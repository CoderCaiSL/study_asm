
apply plugin: 'java-gradle-plugin'
apply plugin: 'kotlin'
apply plugin: 'maven'
//apply plugin: 'maven-publish'

dependencies {
    compileOnly gradleApi()
    implementation localGroovy()
    implementation 'com.android.tools.build:gradle:4.2.2'
    implementation 'org.ow2.asm:asm:7.1'
//    implementation 'org.ow2.asm:asm-commons:5.0.3'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.quinn.hunter:hunter-transform:1.0.0'

}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

//旧版本写法
uploadArchives {
    repositories.mavenDeployer {
        repository(url:uri("${rootProject.projectDir}/plugin"))
        pom.groupId = PROJ_GROUP
        pom.artifactId = PROJ_ARTIFACTID
        pom.version = PROJ_VERSION
    }
}
//打包发布(新版写法)
//afterEvaluate {
//    publishing {
//        publications {
//            // Creates a Maven publication called "release".
//            mavenJava(MavenPublication) {
//                from components.java
//                // Applies the component for the release build variant.
////                from components.release
//                // You can then customize attributes of the publication as shown below.
//                groupId = PROJ_GROUP
//                artifactId = PROJ_ARTIFACTID
//                version = PROJ_VERSION
//            }
//            // Creates a Maven publication called “debug”.
////            debug(MavenPublication) {
////                // Applies the component for the debug build variant.
//////                from components.debug
////
////                groupId = PROJ_GROUP
////                artifactId = PROJ_ARTIFACTID
////                version = PROJ_VERSION
////            }
//        }
//        repositories {
//            maven {
////                name = "nexus"
////                allowInsecureProtocol true
////                url MAVEN_GROUP_URL
////                //nexus3没有开启匿名用户访问的话，添加认证信息
////                credentials {
////                    username = NEXUS_USERNAME
////                    password = NEXUS_PASSWORD
////                }
////                def releasesRepoUrl = MAVEN_URL
////                def snapshotsRepoUrl = MAVEN_SNAPSHOT_URL
//                url = uri("${rootProject.projectDir}/plugin")
//
//            }
//        }
//    }
//}


//publishing {
//    repositories {
//        maven {
//            url = uri("${rootProject.projectDir}/maven-repo")
//            group(PROJ_GROUP)
//        }
//    }
//}
